# =======================================
# /etc/nginx/nginx.conf (단일 파일 기준)
# =======================================

events {
  worker_connections  1024;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  # Docker 내부 DNS
  resolver 127.0.0.11 valid=30s;

  # WebSocket 업그레이드 헤더
  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  # 기본 튜닝(선택)
  sendfile on;
  tcp_nopush on;
  client_max_body_size 50m;

  # -------------------------
  # 80 → 443 리다이렉트(원하면 사용)
  # -------------------------
  server {
    listen 80;
    server_name _;
    return 301 https://$host$request_uri;
  }

  # -------------------------
  # 메인 서버 (443/SSL)
  # -------------------------
  server {
    listen 443 ssl;
    server_name _;

    # SSL (개발용 셀프사인 가능) - 컨테이너 볼륨/시크릿로 마운트 권장
    ssl_certificate     /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;

    # -------- 정적 파일(SPA) --------
    root /usr/share/nginx/html;

    location / {
      try_files $uri /index.html;
    }

    # 개발편의: JS/CSS 캐시 끄기
    location ~* \.(?:js|css)$ {
      expires -1;
      add_header Cache-Control "no-store";
    }
    # 이미지 캐시는 유지
    location ~* \.(?:png|jpg|jpeg|gif|ico|svg|webp)$ {
      expires 7d;
      add_header Cache-Control "public";
    }

    # =====================================
    # ★ API 라우팅 (중요: 예외 → 일반 순서)
    # =====================================

    # 1) fb-aggregator HTTP API (latest/push 등)
    #    '/api/feedback/*' 은 aggregator로 보냅니다.
    location ^~ /api/feedback/ {
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_pass http://fb-aggregator:15030;
    }

    # 2) 집계 엔드포인트도 예외로 aggregator로 보냅니다.
    location = /api/aggregate {
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_pass http://fb-aggregator:15030;
    }

    # 3) v3-pose (prefix-strip 안전형: rewrite 없이 trailing-slash)
    location /api/v3-pose/ {
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_pass http://v3-pose:15012/;   # ← 슬래시(/)로 접두어 제거
    }

    # 4) v3-speech (스트리밍 고려, timeout/버퍼링 조정)
    location /api/v3-speech/ {
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_read_timeout 300s;
      proxy_send_timeout 300s;
      proxy_buffering off;
      proxy_pass http://v3-speech:15013/; # ← 슬래시(/)로 접두어 제거
    }

    # 5) 일반 API는 gateway로 (예외들보다 항상 '아래')
    location /api/ {
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_pass http://gateway:15000;
    }

    # -------- WebSocket (fb-aggregator) --------
    # /ws 및 /ws/ 모두 처리
    location /ws {
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;

      proxy_read_timeout 600s;
      proxy_send_timeout 600s;
      proxy_buffering off;

      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_pass http://fb-aggregator:15030;
    }
  }
}
